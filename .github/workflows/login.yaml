name: Run Login Script and Setup Cron Jobs

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *"  # 每三小时运行一次，可以根据需求调整时间
  push:
    branches:
      - main

jobs:
  login_and_setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 仓库代码
        uses: actions/checkout@v2

      - name: 设置 Python 环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # 设置你希望使用的 Python 版本，建议使用稳定版本

      - name: 创建 accounts.json 文件
        run: |
          echo '[{"username": "hnxpzjww", "password": "Hnxczww86", "panel": "panel8.serv00.com"},
                  {"username": "hnxczjww", "password": "Hnxczww86", "panel": "panel8.serv00.com"},
                  {"username": "WFA77", "password": "Hnxczww86", "panel": "panel8.serv00.com"},
                  {"username": "hnxczwwq", "password": "Hnxczww86", "panel": "panel8.serv00.com"},
                  {"username": "hnxczww66", "password": "Hnxczww86", "panel": "panel8.serv00.com"}]' > accounts.json

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install pyppeteer aiofiles requests

      - name: 登录并执行安装脚本
        run: |
          #!/bin/bash

          # Function to execute a script via curl
          execute_script() {
            local script_url=$1
            curl -s "$script_url" | bash
          }

          # Read the accounts.json file and loop through each server
          while IFS= read -r line; do
            username=$(echo "$line" | jq -r '.username')
            password=$(echo "$line" | jq -r '.password')
            panel=$(echo "$line" | jq -r '.panel')

            # Simulate login process
            echo "尝试登录: ${username}@${panel}"
            response=$(curl -s -w "%{http_code}" -o /dev/null -X POST -d "username=${username}&password=${password}" "http://${panel}/login")
            
            if [ "$response" -eq 200 ]; then
              echo "登录成功: ${username}@${panel}"
              # Execute the installation scripts after successful login
              execute_script "https://raw.githubusercontent.com/ansoncloud8/am-serv00-socks5/main/install-socks5.sh"
              execute_script "https://raw.githubusercontent.com/ansoncloud8/am-serv00-nezha/main/install-dashboard.sh"
              execute_script "https://raw.githubusercontent.com/ansoncloud8/am-serv00-nezha/main/install-agent.sh"
            else
              echo "登录失败: ${username}@${panel}"
            fi
          done < <(jq -c '.[]' accounts.json)

